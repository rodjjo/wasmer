searchState.loadedDescShard("wasmer_middlewares", 0, "<code>metering</code> is a middleware for tracking how many operators …\nThe execution was terminated because the metering points …\nThe function-level metering middleware.\nThe module-level metering middleware.\nRepresents the type of the metering points, either …\nThe given number of metering points is left for the …\nAccumulated cost of the current basic block.\nFunction that maps each operator to a cost in “points”.\nFunction that maps each operator to a cost in “points”.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates a <code>FunctionMiddleware</code> for a given function.\nGet the remaining points in an <code>Instance</code>.\nThe global indexes for metering points.\nThe global indexes for metering points.\nInitial limit of points.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if and only if the given operator is an …\nCreates a <code>Metering</code> middleware.\nThe global index in the current module for a boolean …\nThe global index in the current module for remaining …\nSet the new provided remaining points in an <code>Instance</code>.\nTransforms a <code>ModuleInfo</code> struct in-place. This is called …")